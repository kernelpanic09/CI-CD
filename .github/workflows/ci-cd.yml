name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r src/requirements.txt
        # Install mccabe to resolve dependency conflict
        pip install mccabe==0.7.0

    - name: Create reports directory
      run: mkdir -p reports

    - name: Run tests
      env:
        PYTHONPATH: ./src
      run: pytest --junitxml=reports/test-results.xml --cov=src --cov-report=xml

    - name: Lint code
      run: |
        pip install flake8
        flake8 src --exit-zero --max-line-length=88 --statistics

    - name: Static code analysis
      run: |
        pip install pylint
        pylint --rcfile=.pylintrc src

    - name: Build Docker image
      run: docker build -t example-cicd-pipeline .

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: reports/test-results.xml

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: reports/coverage.xml

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r src/requirements.txt

    - name: Create reports directory
      run: mkdir -p reports

    - name: Run security scan
      run: |
        pip install bandit
        bandit -r src/ -o reports/security-scan.txt --exit-zero

    - name: Dependency vulnerability scan
      run: |
        pip install safety
        safety check -r src/requirements.txt --full-report > reports/dependency-vulnerabilities.txt

    - name: Upload security scan report
      uses: actions/upload-artifact@v2
      with:
        name: security-scan
        path: reports/security-scan.txt

    - name: Upload dependency vulnerability report
      uses: actions/upload-artifact@v2
      with:
        name: dependency-vulnerabilities
        path: reports/dependency-vulnerabilities.txt

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      run: |
        curl -fsSL https://get.docker.com -o get-docker.sh
        sh get-docker.sh

    - name: Deploy to Minikube
      run: |
        minikube start
        eval $(minikube -p minikube docker-env)
        docker build -t example-cicd-pipeline .
        kubectl apply -f k8s/deployment.yaml
